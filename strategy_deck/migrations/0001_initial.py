# Generated by Django 3.2.13 on 2022-10-18 09:13

import cloudinary_storage.storage
import core.utils.base_upload
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('organization', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Objective',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('objective_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('objective_status', models.CharField(choices=[('pending', 'pending'), ('active', 'active'), ('closed', 'closed')], db_index=True, default='pending', max_length=255)),
                ('routine_option', models.CharField(choices=[('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('half_yearly', 'Half Yearly'), ('yearly', 'Yearly'), ('once', 'Once')], max_length=255)),
                ('routine_round', models.PositiveIntegerField(default=1)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('after_occurrence', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('target_point', models.DecimalField(decimal_places=2, default=0.0, max_digits=18)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('corporate_level', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='corporate_level_objective', to='organization.corporatelevel')),
            ],
            options={
                'ordering': ['start_date', '-id'],
            },
        ),
        migrations.CreateModel(
            name='Perspective',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255, unique=True)),
                ('perspective_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('target_point', models.DecimalField(decimal_places=2, default=0.0, max_digits=18)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='ObjectivePerspectiveSpread',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('objective_perspective_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('relative_point', models.DecimalField(decimal_places=2, max_digits=18)),
                ('objective_perspective_point', models.DecimalField(decimal_places=2, default=0.0, max_digits=18)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('objective', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='objective_objective_perspective_spread', to='strategy_deck.objective', to_field='objective_id')),
                ('perspective', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='perspective_objective_perspective_spread', to='strategy_deck.perspective', to_field='perspective_id')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Initiative',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('initiative_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('routine_option', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('fortnightly', 'Fortnightly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('half_yearly', 'Half Yearly'), ('yearly', 'Yearly'), ('once', 'Once')], max_length=255)),
                ('routine_round', models.PositiveIntegerField(default=1)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('after_occurrence', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('initiative_status', models.CharField(choices=[('pending', 'pending'), ('active', 'active'), ('closed', 'closed')], db_index=True, default='pending', max_length=255)),
                ('initiative_brief', models.FileField(blank=True, null=True, storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to=core.utils.base_upload.Upload('initiative_brief/'))),
                ('target_point', models.DecimalField(decimal_places=2, default=0.0, max_digits=18)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assignor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assignor_initiative', to=settings.AUTH_USER_MODEL, to_field='user_id')),
                ('corporate_level', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='corporate_level_initiative', to='organization.corporatelevel')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='department_initiative', to='organization.department')),
                ('division', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='division_initiative', to='organization.division')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='group_initiative', to='organization.group')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='owner_initiative', to=settings.AUTH_USER_MODEL, to_field='user_id')),
                ('unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='unit_initiative', to='organization.unit')),
                ('upline_initiative', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='initiative_initiative', to='strategy_deck.initiative', to_field='initiative_id')),
                ('upline_objective', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='objective_initiative', to='strategy_deck.objective', to_field='objective_id')),
            ],
            options={
                'ordering': ['start_date', '-id'],
            },
        ),
    ]
