# Generated by Django 3.2.13 on 2022-10-18 09:11

import cloudinary_storage.storage
import core.utils.base_upload
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('employee', '0001_initial'),
        ('designation', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EducationDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institution', models.CharField(max_length=255)),
                ('year', models.PositiveIntegerField()),
                ('qualification', models.CharField(max_length=255)),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='EmploymentInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employment_information_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('date_employed', models.DateField(blank=True, null=True)),
                ('date_of_last_promotion', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('on_leave', 'On Leave'), ('suspended', 'Suspended'), ('absent', 'Absent'), ('dismissed', 'Dismissed'), ('resigned', 'Resigned')], db_index=True, default='active', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='employee_employmentinformation', to='employee.employee', to_field='uuid')),
                ('upline', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, to_field='user_id')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='ContactInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_information_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('personal_email', models.EmailField(blank=True, db_index=True, max_length=255, null=True, unique=True)),
                ('official_email', models.EmailField(blank=True, db_index=True, max_length=255, null=True, unique=True)),
                ('phone_number', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('guarantor_one_first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('guarantor_one_last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('guarantor_one_address', models.TextField(blank=True, null=True)),
                ('guarantor_one_occupation', models.CharField(blank=True, max_length=255, null=True)),
                ('guarantor_one_age', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('guarantor_one_id_card', models.FileField(blank=True, null=True, storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='employee_contact_information/')),
                ('guarantor_one_passport', models.FileField(blank=True, null=True, storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='employee_contact_information/')),
                ('guarantor_two_first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('guarantor_two_last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('guarantor_two_address', models.TextField(blank=True, null=True)),
                ('guarantor_two_age', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('guarantor_two_occupation', models.CharField(blank=True, max_length=255, null=True)),
                ('guarantor_two_id_card', models.FileField(blank=True, null=True, storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='employee_contact_information/')),
                ('guarantor_two_passport', models.FileField(blank=True, null=True, storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='employee_contact_information/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='employee_contact_infomation', to='employee.employee', to_field='uuid')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='BasicInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('basic_information_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to=core.utils.base_upload.Upload('employee_basic_information/'))),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('brief_description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('designation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='designation.designation', to_field='designation_id')),
                ('education_details', models.ManyToManyField(blank=True, related_name='education_details_basic_infomation', to='employee_profile.EducationDetail')),
                ('employee', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='employee_basic_infomation', to='employee.employee', to_field='uuid')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
    ]
